--// =========================================================
--//	NO KEYBINDS:
--//   • Instantly removes:
--//        → Unions (size match or Court+Lines path)
--//        → Nets (any part/model/folder named "Net")
--//   • Runs ONCE on execution — no loops, no keybinds
--//   • Minimal overhead, FPS-neutral
--// =========================================================

local Workspace = game:GetService("Workspace")

-- === CONFIGURATION ===
local TARGET_SIZES = {
	Vector3.new(14.074419021606445, 0.1991105079650879, 68.00189208984375),
	Vector3.new(20.78681182861328, 0.10193014144897461, 67.00210571289062)
}
local SIZE_TOLERANCE = 0.0005

-- === HELPERS ===
local function sizeMatchesAny(size: Vector3)
	for _, target in ipairs(TARGET_SIZES) do
		if math.abs(size.X - target.X) <= SIZE_TOLERANCE
			and math.abs(size.Y - target.Y) <= SIZE_TOLERANCE
			and math.abs(size.Z - target.Z) <= SIZE_TOLERANCE then
			return true
		end
	end
	return false
end

local function isInsideCourtAndLines(obj)
	local hasCourt, hasLines = false, false
	local current = obj
	while current do
		local name = current.Name:lower()
		if string.find(name, "court") then
			hasCourt = true
		elseif string.find(name, "lines") then
			hasLines = true
		end
		current = current.Parent
	end
	return hasCourt and hasLines
end

local function shouldRemove(obj)
	if obj:IsA("UnionOperation") and (sizeMatchesAny(obj.Size) or isInsideCourtAndLines(obj)) then
		return true
	end
	if (obj:IsA("BasePart") or obj:IsA("Model") or obj:IsA("Folder")) and obj.Name:lower() == "net" then
		return true
	end
	return false
end

-- === MAIN CLEAN ===
for _, descendant in ipairs(Workspace:GetDescendants()) do
	if shouldRemove(descendant) then
		descendant:Destroy()
	end
end
